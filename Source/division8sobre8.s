;
; File generated by cc65 v 2.13.3
;
	.fopt		compiler,"cc65 v 2.13.3"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_waitvblank
	.export		_main

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

; no trash
SEI

;factor 1 - numerador
LDA 	#7
STA 	$AA

;signo factor 1
LDA 	#0
STA 	$AB

;factor2 - denominador
LDA 	#23
STA 	$55

;signo factor2
LDA 	#0
STA 	$56

   LDA #0
   LDX #8

   ASL $AA			;multiplica por 2 el numerador
L1:
   ROL 				;multiplica por 2 el acumulador
   CMP $55			;compara el acumulador con el denominador
   BCC L2			;si el acumulador es menor que el denominador, salta a L2
   SBC $55			;si el acumulador es mayor o igual, los resta
L2:
   ROL $AA			;multiplica por 2 el numerador
   DEX 				;x--
   BNE L1 			;si no es cero, volvemos a L1

; done, quotient in factor1, remainder in acumulator

;while(1)
papa: JMP papa


.endproc
