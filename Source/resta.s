;
; File generated by cc65 v 2.13.3
;
	.fopt		compiler,"cc65 v 2.13.3"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_waitvblank
	.export		_main

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

; no trash
SEI

;factor 1
LDA 	#7
STA 	$AA

;signo factor 1
LDA 	#0
STA 	$AB

;factor2
LDA 	#23
STA 	$55

;signo factor2
LDA 	#0
STA 	$56

;1 positivo, 0 negativo
;resultado en acumulador
;signo en $77


LDA		$AB
CMP		$56
BEQ		L1 			;si ambos signos son iguales
JMP		L2			;si los signos son diferentes


;-------------signos diferentes

L2: CMP #0
    BEQ L3
    JMP L4

;El de la izquierda es negativo
L3: CLC
    LDA #0
    STA $77
    LDA $AA
    ADC $55
	JMP END


;el de la derecha es negativo
L4: CLC
    LDA #1
    STA $77
    LDA #0
    LDA $AA
    ADC $55
    JMP END

;-------------fin de signos diferentes

;-------------signos iguales


L1:	CLC
	CMP #1
	BEQ L5 ;si son positivos
	JMP L8 ;si son negativos

L5: CLC
	LDA $AA
	CMP $55
	BCS L6; AA>=55
	JMP L7; AA<55

L6:	SEC
	LDA #1
	STA $77
	LDA #0
	LDA $AA
	SBC $55
	JMP END

L7:	SEC
	LDA $0
	STA $77
	LDA $55
	SBC $AA
	JMP END

L8: LDA $AA
	CMP $55
	BCS L9; AA>=55
	JMP L10; AA<55

L9: SEC
	LDA #0
	STA $77
	LDA $AA
	SBC $55
	JMP END


L10:SEC
	LDA #1
	STA $77
	LDA $55
	SBC $AA
	JMP END


;end
END: JMP END

;while(1)
papa: JMP papa

.endproc
