;
; File generated by cc65 v 2.13.3
;
	.fopt		compiler,"cc65 v 2.13.3"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_waitvblank
	.export		_main

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

; no trash
SEI

;factor 1
;numerador 0 a 7 bits
LDA 	#100
STA 	$AA

;factor 2
;numerador 8 a 15 bits
LDA 	#100
STA 	$AB

;factor3
;denominador
LDA 	#200
STA 	$55


   LDA $AB	;cargamos la parte alta del numerador en acumulador
   LDX #8
   ASL $AA	;multiplicamos por 2 la parte baja del numerador
   
L1:
   ROL		;si el primer bit del acumulador es 1
   BCS L2	;pasamos a L2
   CMP $55	;si el acumulador es igual al denominador
   BCC L3	;pasamos a L3
L2 
   SBC $55	;restamos del acumulador, el denominador
   SEC		;set carry
L3:
   ROL $AA	;obtenemos el último dígito de la parte baja del numerador
   DEX		;x--
   BNE L1	;si x no es cero, seguimos
   
; done, high quoient in factor1, remainder in acumulador 

;while(1)
papa: JMP papa


.endproc